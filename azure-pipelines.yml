# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger: 
  branches:
    include:
    - main
    - dev
  tags:
    include:
    - v*

variables:     
  python.version: '3.6'
  baseFolder: .
  componentArtifactName: 'azure_functions_durable'
  #componentArtifactName: 'dist'
  

stages:
- stage: Build
  displayName: Build PyPi Artifact
  jobs:

  - job: Build_Durable_Functions
    displayName: Build Python Package
    pool: 
      name: "1ES-Hosted-AzFunc"
      demands:
          - ImageOverride -equals MMSUbuntu20.04TLS
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install wheel
      workingDirectory: $(baseFolder) 
      displayName: 'Install dependencies'

    - script: |
        cd azure
        flake8 . --count --show-source --statistics
      displayName: 'Run lint test with flake8'

    - script: |
        pip install pytest pytest-azurepipelines
        pytest
      displayName: 'pytest'

    - script: |
        python setup.py sdist bdist_wheel
      workingDirectory: $(baseFolder) 
      displayName: 'Building'
    - task: ManifestGeneratorTask@0
      displayName: "SBOM Generation Task"
      inputs:
          BuildComponentPath: '$(baseFolder)'
          BuildDropPath: dist
          Verbosity: "Information"
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: dist'
      inputs:
        PathtoPublish: dist
        ArtifactName: $(componentArtifactName)
    

